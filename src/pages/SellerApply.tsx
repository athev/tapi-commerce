import { useEffect } from "react";
import { useNavigate, Link } from "react-router-dom";
import Navbar from "@/components/layout/Navbar";
import Footer from "@/components/layout/Footer";
import { useAuth } from "@/context/AuthContext";
import { useSellerStatus } from "@/hooks/useSellerStatus";
import SellerApplicationForm from "@/components/seller/SellerApplicationForm";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Loader2, CheckCircle, Clock, XCircle } from "lucide-react";

const SellerApply = () => {
  const { user } = useAuth();
  const navigate = useNavigate();
  const { sellerStatus, loading } = useSellerStatus();

  useEffect(() => {
    document.title = "ƒêƒÉng k√Ω ng∆∞·ªùi b√°n | DigitalMarket";
  }, []);

  useEffect(() => {
    if (!user && !loading) {
      navigate("/login");
    }
  }, [user, loading, navigate]);

  if (loading || !user) {
    return (
      <div className="flex flex-col min-h-screen">
        <Navbar />
        <main className="flex-1 container py-8 flex items-center justify-center">
          <Loader2 className="h-8 w-8 animate-spin text-marketplace-primary" />
        </main>
        <Footer />
      </div>
    );
  }

  const renderContent = () => {
    switch (sellerStatus) {
      case 'approved_seller':
        return (
          <Card>
            <CardHeader>
              <div className="flex items-center space-x-2">
                <CheckCircle className="h-6 w-6 text-green-600" />
                <CardTitle>B·∫°n ƒë√£ l√† ng∆∞·ªùi b√°n</CardTitle>
              </div>
              <CardDescription>
                T√†i kho·∫£n c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ph√™ duy·ªát l√†m ng∆∞·ªùi b√°n
              </CardDescription>
            </CardHeader>
            <CardContent>
              <Button asChild className="w-full">
                <Link to="/seller">
                  V√†o Dashboard Ng∆∞·ªùi b√°n
                </Link>
              </Button>
            </CardContent>
          </Card>
        );

      case 'pending_approval':
        return (
          <Card>
            <CardHeader>
              <div className="flex items-center space-x-2">
                <Clock className="h-6 w-6 text-yellow-600" />
                <CardTitle>ƒê∆°n ƒëƒÉng k√Ω ƒëang ch·ªù x√©t duy·ªát</CardTitle>
              </div>
              <CardDescription>
                ƒê∆°n ƒëƒÉng k√Ω ng∆∞·ªùi b√°n c·ªßa b·∫°n ƒëang ƒë∆∞·ª£c xem x√©t
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <p className="text-sm text-muted-foreground">
                Ch√∫ng t√¥i s·∫Ω xem x√©t ƒë∆°n ƒëƒÉng k√Ω c·ªßa b·∫°n v√† ph·∫£n h·ªìi trong th·ªùi gian s·ªõm nh·∫•t. 
                Vui l√≤ng ki·ªÉm tra email ƒë·ªÉ nh·∫≠n th√¥ng b√°o c·∫≠p nh·∫≠t.
              </p>
              <div className="bg-blue-50 p-4 rounded-lg">
                <p className="text-sm text-blue-900">
                  <strong>Th·ªùi gian x√©t duy·ªát:</strong> Th∆∞·ªùng t·ª´ 1-3 ng√†y l√†m vi·ªác
                </p>
              </div>
            </CardContent>
          </Card>
        );

      case 'rejected':
        return (
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <div className="flex items-center space-x-2">
                  <XCircle className="h-6 w-6 text-red-600" />
                  <CardTitle>ƒê∆°n ƒëƒÉng k√Ω kh√¥ng ƒë∆∞·ª£c ch·∫•p nh·∫≠n</CardTitle>
                </div>
                <CardDescription>
                  ƒê∆°n ƒëƒÉng k√Ω ng∆∞·ªùi b√°n c·ªßa b·∫°n ƒë√£ b·ªã t·ª´ ch·ªëi
                </CardDescription>
              </CardHeader>
              <CardContent>
                <p className="text-sm text-muted-foreground mb-4">
                  B·∫°n c√≥ th·ªÉ g·ª≠i l·∫°i ƒë∆°n ƒëƒÉng k√Ω v·ªõi th√¥ng tin ƒë·∫ßy ƒë·ªß h∆°n.
                </p>
              </CardContent>
            </Card>
            <SellerApplicationForm />
          </div>
        );

      case 'buyer':
      default:
        return (
          <div className="space-y-6">
            <Card>
              <CardHeader>
                <CardTitle>Tr·ªü th√†nh ng∆∞·ªùi b√°n tr√™n S√†n Ph·∫©m S·ªë</CardTitle>
                <CardDescription>
                  M·ªü r·ªông kinh doanh v√† ti·∫øp c·∫≠n h√†ng ng√†n kh√°ch h√†ng ti·ªÅm nƒÉng
                </CardDescription>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div className="bg-gradient-to-br from-blue-50 to-blue-100 p-4 rounded-lg">
                      <h3 className="font-semibold mb-2">‚ú® D·ªÖ d√†ng qu·∫£n l√Ω</h3>
                      <p className="text-sm text-muted-foreground">
                        Dashboard tr·ª±c quan gi√∫p qu·∫£n l√Ω s·∫£n ph·∫©m v√† ƒë∆°n h√†ng hi·ªáu qu·∫£
                      </p>
                    </div>
                    <div className="bg-gradient-to-br from-green-50 to-green-100 p-4 rounded-lg">
                      <h3 className="font-semibold mb-2">üí∞ Thu nh·∫≠p ·ªïn ƒë·ªãnh</h3>
                      <p className="text-sm text-muted-foreground">
                        Thanh to√°n nhanh ch√≥ng v√† minh b·∫°ch qua h·ªá th·ªëng v√≠ ƒëi·ªán t·ª≠
                      </p>
                    </div>
                    <div className="bg-gradient-to-br from-purple-50 to-purple-100 p-4 rounded-lg">
                      <h3 className="font-semibold mb-2">üìà Ph√°t tri·ªÉn b·ªÅn v·ªØng</h3>
                      <p className="text-sm text-muted-foreground">
                        C√¥ng c·ª• ph√¢n t√≠ch chi ti·∫øt gi√∫p t·ªëi ∆∞u chi·∫øn l∆∞·ª£c kinh doanh
                      </p>
                    </div>
                    <div className="bg-gradient-to-br from-orange-50 to-orange-100 p-4 rounded-lg">
                      <h3 className="font-semibold mb-2">ü§ù H·ªó tr·ª£ t·∫≠n t√¢m</h3>
                      <p className="text-sm text-muted-foreground">
                        ƒê·ªôi ng≈© chƒÉm s√≥c kh√°ch h√†ng lu√¥n s·∫µn s√†ng h·ªó tr·ª£ 24/7
                      </p>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>
            <SellerApplicationForm />
          </div>
        );
    }
  };

  return (
    <div className="flex flex-col min-h-screen">
      <Navbar />
      <main className="flex-1 container py-8">
        <div className="max-w-3xl mx-auto">
          {renderContent()}
        </div>
      </main>
      <Footer />
    </div>
  );
};

export default SellerApply;
